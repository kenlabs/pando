package schema

// Code generated by go-ipld-prime gengo.  DO NOT EDIT.

import (
	"github.com/ipld/go-ipld-prime/datamodel"
)

var _ datamodel.Node = nil // suppress errors when this dependency is not referenced
// Type is a struct embeding a NodePrototype/Type for every Node implementation in this package.
// One of its major uses is to start the construction of a value.
// You can use it like this:
//
// 		schema.Type.YourTypeName.NewBuilder().BeginMap() //...
//
// and:
//
// 		schema.Type.OtherTypeName.NewBuilder().AssignString("x") // ...
//
var Type typeSlab

type typeSlab struct {
	Bool                _Bool__Prototype
	Bool__Repr          _Bool__ReprPrototype
	Bytes               _Bytes__Prototype
	Bytes__Repr         _Bytes__ReprPrototype
	Float               _Float__Prototype
	Float__Repr         _Float__ReprPrototype
	Int                 _Int__Prototype
	Int__Repr           _Int__ReprPrototype
	Link                _Link__Prototype
	Link__Repr          _Link__ReprPrototype
	Link_Metadata       _Link_Metadata__Prototype
	Link_Metadata__Repr _Link_Metadata__ReprPrototype
	Metadata            _Metadata__Prototype
	Metadata__Repr      _Metadata__ReprPrototype
	String              _String__Prototype
	String__Repr        _String__ReprPrototype
}

// --- type definitions follow ---

// Bool matches the IPLD Schema type "Bool".  It has bool kind.
type Bool = *_Bool
type _Bool struct{ x bool }

// Bytes matches the IPLD Schema type "Bytes".  It has bytes kind.
type Bytes = *_Bytes
type _Bytes struct{ x []byte }

// Float matches the IPLD Schema type "Float".  It has float kind.
type Float = *_Float
type _Float struct{ x float64 }

// Int matches the IPLD Schema type "Int".  It has int kind.
type Int = *_Int
type _Int struct{ x int64 }

// Link matches the IPLD Schema type "Link".  It has link kind.
type Link = *_Link
type _Link struct{ x datamodel.Link }

// Link_Metadata matches the IPLD Schema type "Link_Metadata".  It has link kind.
type Link_Metadata = *_Link_Metadata
type _Link_Metadata struct{ x datamodel.Link }

// Metadata matches the IPLD Schema type "Metadata".  It has struct type-kind, and may be interrogated like map kind.
type Metadata = *_Metadata
type _Metadata struct {
	PreviousID _Link_Metadata__Maybe
	Provider   _String
	Payload    _Bytes
	Signature  _Bytes
}

// String matches the IPLD Schema type "String".  It has string kind.
type String = *_String
type _String struct{ x string }
