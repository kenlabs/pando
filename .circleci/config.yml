version: 2.1

orbs:
  codecov: codecov/codecov@3.2.0
  slack: circleci/slack@4.5.0
  jira: circleci/jira@1.3.1

jobs:
  unit-test:
    working_directory: ~/repo
    docker:
      - image: circleci/golang:1.16
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: |
            GO111MODULE=on
            go mod tidy
      - run:
          name: Test and Coverage
          command: |
            TEST_TARGET=`go list ./... | grep -v pkg/statetree/types | grep -v example | grep -v test | grep -v cmd`
            go test -gcflags=all=-l -coverprofile=coverage.txt -covermode=atomic $TEST_TARGET
      - codecov/upload:
          file: coverage.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - repo

  build-push:
    working_directory: ~/repo
    docker:
      - image: circleci/golang:1.16
    steps:
      - checkout
      - run:
          name: Build Service
          command: make
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Build and push Docker image
          command: |
            cp ./bin/pando-server ./build
            cd ./build
            DOCKER_STR="${DOCKER_REGISTRY}/${DOCKER_NAMESPACE}/${DOCKER_REPO}"
            TAG="${DOCKER_STR}:${CIRCLE_BUILD_NUM}"
            docker build -t ${TAG} .
            docker tag ${TAG} ${DOCKER_STR}:latest
            docker login -u ${DOCKER_ALI_USERNAME} -p ${DOCKER_ALI_PWD} ${DOCKER_REGISTRY}
            docker push ${TAG}
            docker push ${DOCKER_STR}:latest
      - slack/notify:
          event: fail
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: basic_success_1
    # The resource_class feature allows configuring CPU and RAM resources for each job. Different resource classes are available for different executors. https://circleci.com/docs/2.0/configuration-reference/#resourceclass
    resource_class: large

workflows:
  pando-build:
    jobs:
      - unit-test:
          name: unit-test
          post-steps:
            - jira/notify:
                job_type: build
      - build-push:
          name: build-push
          post-steps:
            - jira/notify:
                environment_type: production
                job_type: deployment
          requires:
            - unit-test
          filters:
            branches:
              only:
                - main
